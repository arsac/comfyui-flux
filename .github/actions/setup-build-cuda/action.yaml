name: Set up Runner for build

inputs:
  python-version:
    description: Python version to install
    required: false
    default: "3.12"

runs:
  using: composite
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        python-version: ${{ inputs.python-version || '3.12' }}

    - shell: bash
      run: |
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-keyring_1.1-1_all.deb
        sudo dpkg -i cuda-keyring_1.1-1_all.deb
        sudo apt update && sudo apt install -y --no-install-recommends build-essential wget git cuda-toolkit-12-9

    - shell: bash
      run: |
        which g++
        g++ --version

    - name: (Linux) set CUDA environment variables
      shell: bash
      run: |
        # echo "CUDA_HOME=/usr/local/cuda-12.9" >> $GITHUB_ENV
        # echo "PATH=${PATH}:/usr/local/cuda-12.9/bin" >> $GITHUB_ENV
        # echo "LD_LIBRARY_PATH=/usr/local/cuda-12.9/lib64" >> $GITHUB_ENV
        # host compiler is too new for cuda 12.1 :(
        echo "NVCC_FLAGS=-allow-unsupported-compiler" >> $GITHUB_ENV

    - run: uv venv -p ${{ inputs.python-version || '3.12' }} --seed --python-preference only-managed
      shell: bash
      env:
        VIRTUAL_ENV: ${{ github.workspace }}/venv
