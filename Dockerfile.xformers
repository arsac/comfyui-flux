ARG CUDA_VERSION=12.9.0
ARG PYTHON_VERSION=3.12

FROM python:${PYTHON_VERSION}-slim-bookworm AS base

ENV DEBIAN_FRONTEND=noninteractive
RUN apt update && apt install -y --no-install-recommends \
    curl git build-essential && \
    apt clean && rm -rf /var/lib/apt/lists/*

RUN curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/debian12/x86_64/cuda-keyring_1.1-1_all.deb -o cuda-keyring_1.1-1_all.deb && \
    dpkg -i cuda-keyring_1.1-1_all.deb && \
    apt update && \
    apt install -y --no-install-recommends \
    cuda-toolkit-12-9

RUN df -h

# Install uv
RUN curl -LsSf https://astral.sh/uv/install.sh | env UV_INSTALL_DIR=/usr/local/bin sh

WORKDIR /workspace
ENV UV_CACHE_DIR=/tmp/uv-cache

# Create venv
ARG PYTHON_VERSION
RUN uv venv -p ${PYTHON_VERSION} --seed --python-preference only-managed
ENV VIRTUAL_ENV=/workspace/.venv
ENV PATH=${VIRTUAL_ENV}/bin:${PATH}

# Install PyTorch
RUN --mount=type=cache,target=/tmp/uv-cache \
    uv pip install torch torchvision --index-url https://download.pytorch.org/whl/nightly/cu128

# Install build dependencies
RUN --mount=type=cache,target=/tmp/uv-cache \
    uv pip install -U build cmake ninja pybind11 setuptools wheel

# Build xformers
ARG XFORMERS_REF=v0.0.30
ARG TORCH_CUDA_ARCH_LIST="12.0"
ENV TORCH_CUDA_ARCH_LIST=${TORCH_CUDA_ARCH_LIST}

RUN git clone https://github.com/facebookresearch/xformers.git
RUN cd xformers && \
    git checkout ${XFORMERS_REF} && \
    git submodule sync && \
    git submodule update --init --recursive -j 8 && \
    uv build --wheel --no-build-isolation -o /wheels

# Create final stage with just wheels
FROM scratch AS wheels-only
COPY --from=base /wheels /wheels